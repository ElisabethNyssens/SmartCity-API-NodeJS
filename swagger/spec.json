{
  "openapi": "3.0.0",
  "info": { "title": "Ecomini", "version": "1.0.0" },
  "paths": {
    "/ad/{id}": {
      "get": {
        "tags": ["Ad"],
        "parameters": [
          {
            "name": "id",
            "description": "ID d'une annonce",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "$ref": "#/components/responses/AdFound" },
          "400": { "description": "L'id n'est pas un nombre" },
          "404": { "description": "Annonce non trouvée" },
          "500": { "description": "Erreur serveur" }
        }
      },
      "delete": {
        "tags": ["Ad"],
        "security": [{ "bearerAuth": [] }],
        "description": "Supprime une annonce",
        "parameters": [
          {
            "name": "id",
            "description": "ID d'une annonce",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/AdDeleted" },
          "400": { "$ref": "#/components/responses/DeleteAdBadRequest" },
          "401": { "$ref": "#/components/responses/MissingJWT" },
          "404": {
            "description": "L'annonce n'a pas été trouvé dans la base de données"
          },
          "500": { "description": "Erreur serveur" }
        }
      }
    },
    "/ad": {
      "post": {
        "tags": ["Ad"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": { "$ref": "#/components/requestBodies/AdToAdd" },
        "responses": {
          "201": { "$ref": "#/components/responses/AdAdd" },
          "400": { "$ref": "#/components/responses/ErrorJWT" },
          "401": { "$ref": "#/components/responses/MissingJWT" },
          "403": { "$ref": "#/components/responses/mustBeManager" },
          "404": { "description": "Utilisateur non trouvée" },
          "500": { "description": "Erreur serveur" }
        }
      },
      "patch": {
        "tags": ["Ad"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": { "$ref": "#/components/requestBodies/AdToUpdate" },
        "responses": {
          "201": { "$ref": "#/components/responses/AdUpdated" },
          "400": { "$ref": "#/components/responses/ErrorJWT" },
          "401": { "$ref": "#/components/responses/MissingJWT" },
          "403": { "$ref": "#/components/responses/mustBeManager" },
          "500": { "description": "Erreur serveur" }
        }
      }
    },
    "/connexion": {
      "post": {
        "tags": ["User"],
        "description": "renvoie un JWT token permettant l'identification",
        "requestBody": {
          "description": "login pour la connexion",
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/Login" } }
          }
        },
        "responses": {
          "200": {
            "description": "un token JWT",
            "content": { "text/plain": { "schema": { "type": "string" } } }
          },
          "400": { "description": "nom d'utilisateur ou mot de passe manquants" },
          "401": { "description": "mot de passe incorrect" },
          "404": { "description": "utilisateur inconnu" },
          "500": { "description": "erreur serveur" }
        }
      }
    },
    "/user/{pseudo}": {
      "get": {
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "description": "Renvoie un utilisateur",
        "parameters": [
          {
            "name": "pseudo",
            "description": "pseudo d'un utilisteur",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/UserFound" },
          "400": { "$ref": "#/components/responses/UserRetrievedBadRequest" },
          "401": { "$ref": "#/components/responses/UnauthorizedJWT" },
          "404": { "description": "L'utilisateur n'a pas été trouvé" },
          "500": { "description": "Erreur serveur" }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "description": "Renvoie tous les utilisateurs",
        "responses": {
          "200": { "$ref": "#/components/responses/AllUserFound" },
          "401": { "$ref": "#/components/responses/UnauthorizedJWT" },
          "404": { "description": "Aucun utilisateur n'a pas été trouvé" },
          "500": { "description": "Erreur serveur" }
        }
      },
      "post": {
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "description": "Ajoute un utilisateur",
        "requestBody": { "$ref": "#/components/requestBodies/UserToAdd" },
        "responses": {
          "201": { "$ref": "#/components/responses/UserAdded" },
          "400": { "$ref": "#/components/responses/AddUserBadRequest" },
          "500": { "description": "Erreur serveur" }
        }
      },
      "patch": {
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "description": "Modifie un utilisateur",
        "requestBody": { "$ref": "#/components/requestBodies/UserToUpdate" },
        "responses": {
          "204": { "$ref": "#/components/responses/UserUpdated" },
          "400": { "$ref": "#/components/responses/UpdateUserBadRequest" },
          "401": { "$ref": "#/components/responses/UnauthorizedJWT" },
          "404": {
            "description": "L'utilisateur n'a pas été trouvé dans la base de données"
          },
          "500": { "description": "Erreur serveur" }
        }
      }
    },
    "/user/{id}": {
      "delete": {
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "description": "Supprime un utilisateur",
        "parameters": [
          {
            "name": "id",
            "description": "ID d'un utilisateur",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/UserDeleted" },
          "400": { "$ref": "#/components/responses/DeleteUserBadRequest" },
          "401": { "$ref": "#/components/responses/UnauthorizedJWT" },
          "403": { "$ref": "#/components/responses/mustBeManager" },
          "404": {
            "description": "L'utilisateur n'a pas été trouvé dans la base de données"
          },
          "500": { "description": "Erreur serveur" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Ad": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "title": { "type": "string", "description": "nom de l'annonce" },
          "content": { "type": "string" },
          "creationDate": { "type": "string", "format": "date" },
          "streetName": { "type": "string" },
          "streetNumber": { "type": "integer" },
          "author": { "type": "integer" },
          "serviceDate": { "type": "string", "format": "date" },
          "availability": { "type": "string" },
          "booking": { "type": "integer" },
          "zipCodeLocation": { "type": "integer" },
          "cityLocation": { "type": "string" }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "pseudo": { "type": "string" },
          "password": { "type": "string", "format": "password" }
        },
        "required": ["pseudo", "password"]
      },
      "User": {
        "type": "object",
        "properties": {
          "pseudo": { "type": "string" },
          "name": { "type": "string" },
          "firstname": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string", "format": "password" },
          "nbPearls": { "type": "integer" },
          "helpCounter": { "type": "integer" },
          "description": { "type": "string" },
          "streetName": { "type": "string" },
          "streetNumber": { "type": "integer" },
          "isAdmin": { "type": "boolean" },
          "zipCodeLocation": { "type": "integer" },
          "cityLocation": { "type": "string" }
        }
      },
      "WrongJWT": {
        "type": "object",
        "oneOf": [
          { "$ref": "#/components/responses/MissingJWT" },
          { "$ref": "#/components/responses/ExpiredJWT" }
        ]
      },
      "AdToDeleteBadRequestResponse": {
        "type": "object",
        "oneOf": [
          { "$ref": "#/components/responses/ErrorJWT" },
          { "$ref": "#/components/responses/DeleteAdBadRequest" }
        ]
      },
      "UserToGetBadRequestResponse": {
        "type": "object",
        "oneOf": [
          { "$ref": "#/components/responses/ErrorJWT" },
          { "$ref": "#/components/responses/UserRetrievedBadRequest" }
        ]
      },
      "UserToDeleteBadRequestResponse": {
        "type": "object",
        "oneOf": [
          { "$ref": "#/components/responses/ErrorJWT" },
          { "$ref": "#/components/responses/DeleteUserBadRequest" }
        ]
      }
    },
    "responses": {
      "AdFound": {
        "description": "Renvoie une annonce",
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/Ad" } }
        }
      },
      "AdUpdated": { "description": "L'annonce a été vérifié" },
      "VerifyEventBadRequest": {
        "description": "Tous les champs du corps de la requête doivent être définis"
      },
      "AdDeleted": {
        "description": "l'annonce a été supprimée",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": null,
              "$ref": "#/components/schemas/AdToDeleteBadRequestResponse"
            }
          }
        }
      },
      "DeleteAdBadRequest": { "description": "L'id de l'annonce doit être fourni" },
      "AdAdd": { "description": "L'annonce a été ajoutée" },
      "UserUpdated": { "description": "L'utilisateur a été modifié" },
      "UpdateUserBadRequest": {
        "description": "Tous les champs du corps de la requête doivent être définis"
      },
      "UserAdded": { "description": "L'utilisateur a été ajouté" },
      "AddUserBadRequest": {
        "description": "Tous les champs du corps de la requête doivent être définis"
      },
      "UserFound": {
        "description": "Renvoie un utilisateur",
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/User" } }
        }
      },
      "UserRetrievedBadRequest": {
        "description": "Le pseudo de l'utilisateur doit être fournit"
      },
      "UserDeleted": { "description": "L'utilisateur a été supprimée" },
      "DeleteUserBadRequest": {
        "description": "Le pseudo de l'utilisateur doit être définit"
      },
      "AllUserFound": {
        "description": "Renvoie tous les utilisateurs présents dans la base de donnée",
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/User" } }
        }
      },
      "mustBeManager": {
        "description": "L'action demandée ne peut être réalisée que par un administrateur"
      },
      "UnauthorizedJWT": {
        "description": "JWT manquant ou expiré",
        "content": {
          "application/json": {
            "schema": { "oneOf": null, "$ref": "#/components/schemas/WrongJWT" }
          }
        }
      },
      "ErrorJWT": { "description": "Le JWT n'est pas valide" },
      "MissingJWT": { "description": "Le JWT n'est pas présent" },
      "ExpiredJWT": { "description": "Le JWT est expiré" },
      "UserToGetBadRequest": {
        "description": "Mauvaise requête pour la récupération d'un utilisateur",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": null,
              "$ref": "#/components/schemas/UserToGetBadRequestResponse"
            }
          }
        }
      },
      "UserToDeleteBadRequest": {
        "description": "Mauvaise requête pour la suppression d'un utilisateur",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": null,
              "$ref": "#/components/schemas/UserToDeleteBadRequestResponse"
            }
          }
        }
      }
    },
    "requestBodies": {
      "AdToUpdate": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "integer" },
                "title": { "type": "string", "description": "nom de l'annonce" },
                "content": { "type": "string" },
                "creationDate": { "type": "string", "format": "date" },
                "streetName": { "type": "string" },
                "streetNumber": { "type": "integer" },
                "author": { "type": "integer" },
                "serviceDate": { "type": "string", "format": "date" },
                "availability": { "type": "string" },
                "booking": { "type": "integer" },
                "zipCodeLocation": { "type": "integer" },
                "cityLocation": { "type": "string" }
              }
            }
          }
        }
      },
      "EventToVerify": {
        "description": "L'évènement à vérifier",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "adminMessage": { "type": "string" },
                "isVerified": { "type": "boolean" }
              },
              "required": ["adminMessage", "isVerified"]
            }
          }
        }
      },
      "AdToDelete": {
        "description": "Annonce à supprimer",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": { "id": { "type": "integer", "required": ["id"] } }
            }
          }
        }
      },
      "AdToAdd": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "integer" },
                "title": { "type": "string", "description": "nom de l'annonce" },
                "content": { "type": "string" },
                "creationDate": { "type": "string", "format": "date" },
                "streetName": { "type": "string" },
                "streetNumber": { "type": "integer" },
                "author": { "type": "integer" },
                "serviceDate": { "type": "string", "format": "date" },
                "availability": { "type": "string" },
                "booking": { "type": "integer" },
                "zipCodeLocation": { "type": "integer" },
                "cityLocation": { "type": "string" }
              }
            }
          }
        }
      },
      "UserToUpdate": {
        "description": "Utilisateur à mettre à jour",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "pseudo": { "type": "string" },
                "name": { "type": "string" },
                "firstname": { "type": "string" },
                "email": { "type": "string" },
                "password": { "type": "string", "format": "password" },
                "streetName": { "type": "string" },
                "streetNumber": { "type": "integer" },
                "zipCodeLocation": { "type": "integer" },
                "cityLocation": { "type": "string" }
              },
              "required": [
                "pseudo",
                "name",
                "firstname",
                "email",
                "password",
                "streetName",
                "streetNumber",
                "zipCodeLocation",
                "cityLocation"
              ]
            }
          }
        }
      },
      "UserToAdd": {
        "description": "Utilisateur à ajouter",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "pseudo": { "type": "string" },
                "name": { "type": "string" },
                "firstname": { "type": "string" },
                "email": { "type": "string" },
                "password": { "type": "string", "format": "password" },
                "streetName": { "type": "string" },
                "streetNumber": { "type": "integer" },
                "zipCodeLocation": { "type": "integer" },
                "cityLocation": { "type": "string" }
              },
              "required": [
                "pseudo",
                "name",
                "firstname",
                "email",
                "password",
                "streetName",
                "streetNumber",
                "zipCodeLocation",
                "cityLocation"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" }
    }
  },
  "tags": []
}
